{"version":3,"file":"mahaBundle.js","sources":["miscUtils.js","ChoroMap.js","mlaInfoPanel.js","mahaIndex.js"],"sourcesContent":["import {\n  select,\n  json\n} from 'd3';\n\n\nexport const LoadNProcData = (dataurl) =>\n  json(dataurl)\n    .then((topo) => {\n      const feature_array = topo.features;\n      // console.log({feature_array})\n      return feature_array;\n    });\n\nexport const getSvg = () => {\n  // Select the root svg element\n  const svg = select(\"svg\");\n  return svg;\n\n}\n\nexport const getSvgDimensions = () => {\n  // Get height of root svg element\n  const svg = getSvg();\n\n  const width = +svg.attr(\"width\");\n  const height = +svg.attr(\"height\");\n\n  return { width: width, height: height };\n}\n\nexport const ClrLgnd = (selection, props) => {\n  // console.log('colorLegend called');\n  const { colorValues, // Array of colors\n    colorLabels, //Tile labels array\n    labelRectSize, //size of color tiles\n    labelSpacing, //spacing between color tiles\n    labelTextOffset, //spacing between tile and label text\n    onColorClick,\n    selectedColorValue, // selected color value\n    selectedConstituency // selected constituency\n  } = props;\n  \n  // remove all ticks\n  selection.selectAll('.tick').remove();\n\n  // Add elements in legend body\n  const groups = selection.selectAll('.tick').data(colorValues);\n\n  // remove previuosly added elements('tick')\n  groups.exit().remove();\n\n  // Create one group for each color\n  const groupsEnter = groups.enter().append('g').attr('class', 'tick');\n\n  // Append/Update the label/color groups\n  groupsEnter\n    .merge(groups)\n    .attr('transform', (d, i) => `translate(0, ${i * labelSpacing})`)\n    .attr('opacity', d => {\n      return ((!selectedColorValue || d === selectedColorValue) || selectedConstituency)\n        ? 1\n        : 0.2\n    })\n    .on('click', d => onColorClick(\n      d === selectedColorValue\n        ? null\n        : d\n    ));\n\n  // Add the tiles\n  groupsEnter.append('rect')\n    .merge(groups.select('rect'))\n    .attr('fill', (d, i) => colorValues[i])\n    .attr('width', labelRectSize)\n    .attr('height', labelRectSize);\n\n  // console.log({colorValues, labelRectSize})\n\n  // Add the text\n  groupsEnter.append('text')\n    .merge(groups.select('text'))\n    .text((d, i) => colorLabels[i])\n    .attr('dy', '1.2em')\n    .attr('x', labelTextOffset);\n};\n\n// Get background rectangale dimensions\nexport const getBgRectangleDimensions = (colorValues,\n  colorLabels,\n  labelRectSize,\n  labelTextOffset,\n  labelSpacing,\n  legendTitle) => {\n  // Find longest label\n  const longestLabel = colorLabels.reduce(function (a, b) { return a.length > b.length ? a : b; });\n  const longestText = (legendTitle.length > longestLabel.length)\n    ? legendTitle\n    : longestLabel;\n\n  // console.log('longestText: ' + longestText);\n  const backgroundRectWidth = labelRectSize + labelTextOffset + longestText.length * 5 + labelTextOffset;\n  const backgroundRectHeight = labelSpacing * (colorValues.length + 2);\n  return { width: backgroundRectWidth, height: backgroundRectHeight };\n};\n\nexport const dropDownMenu = (selection, props) => {\n  const {\n    options,\n    onOptionClicked\n  } = props;\n\n  let select = selection.selectAll('select').data([null]);\n\n  select = select.enter().append('select')\n    .merge(select)\n    .on('change', function() {\n      onOptionClicked(this.value);\n    });\n\n  const option = select.selectAll('option').data(options);\n\n  option.enter().append('option')\n    .merge(option)\n      .attr('value', d => d)\n      .text(d => d);  \n\n };\n\n// Create categories from Education field\nexport const processEduFeatures = (features) => {\n  /////  Categories of education  ////\n  // Doctorate: 7 \n  // Post Graduate: 6\n  // Graduate Professional: 5\n  // Graduate: 5 \n  // 12th Pass: 4\n  // 10th Pass: 4 \n  // 8th Pass: 4\n  // 5th Pass: 4\n  // Literate: 4 \n  // Others: 3\n  // Illiterate: 2 \n  // nan\n\n  features.forEach(element => {\n    if (element.properties.Education === 'Doctorate') {\n      element.properties.edu = 7;\n    } else if (element.properties.Education === 'Post Graduate') {\n      element.properties.edu = 6;\n    } else if (element.properties.Education === 'Graduate Professional' ||\n      element.properties.Education === 'Graduate') {\n      element.properties.edu = 5;\n    } else if (element.properties.Education === '12th Pass' ||\n      element.properties.Education === '10th Pass' ||\n      element.properties.Education === '8th Pass' ||\n      element.properties.Education === '5th Pass' ||\n      element.properties.Education === 'Literate') {\n      element.properties.edu = 4;\n    } else if (element.properties.Education === 'Others') {\n      element.properties.edu = 3;\n    } else if (element.properties.Education === 'Illiterate') {\n      element.properties.edu = 2;\n    } else {\n      element.properties.edu = 0;\n      // console.log('unexpected Education field: ' + element.properties.ST_PC ); \n    }\n  });\n}\n\n// Create categories from Education field\nexport const processPartyFeatures = (features) => {\n  // Get count of seats for all parties in an object\n  let partyCount = features.reduce((p, c) => {\n    let name = c.properties.Party;\n    if (!p.hasOwnProperty(name)) {\n      p[name] = 0;\n    }\n    p[name]++;\n    return p;\n  }, {});\n\n\n  let sortedPartyCount = [];\n  for (let party in partyCount) {\n    sortedPartyCount.push([party, partyCount[party]]);\n  }\n\n  // Sort the array\n  sortedPartyCount.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  // get top 10 parties by seats\n  sortedPartyCount = sortedPartyCount.slice(0, 10);\n\n  const partyMap = {};\n  for (var i = 0; i < sortedPartyCount.length; ++i)\n    partyMap[sortedPartyCount[i][0]] = sortedPartyCount[i][1];\n\n  return partyMap;\n}\n\n// Create categories from Education field\nexport const haryanaProcEduFeatures = (features) => {\n  /////  Categories of education  ////  \n  // Post Graduate:4\n  // Graduate Professional:3\n  // Graduate:3\n  // 12th Pass:2\n  // 10th Pass:2\n  // 8th Pass:2\n  // 5th Pass:2\n  // Others: 1\n\n  \n  features.forEach(element => {\n    if (element.properties.Education === 'Post Graduate') {\n      element.properties.edu = 4;\n    } else if (element.properties.Education === 'Graduate Professional' ||\n      element.properties.Education === 'Graduate') {\n      element.properties.edu = 3;\n    } else if (element.properties.Education === '12th Pass' ||\n      element.properties.Education === '10th Pass' ||\n      element.properties.Education === '8th Pass' ||\n      element.properties.Education === '5th Pass') {\n      element.properties.edu = 2;\n    } else if (element.properties.Education === 'Others') {\n      element.properties.edu = 1;\n    } else {\n      element.properties.edu = 0;\n    }\n  });\n}\n\n// Create categories from Education field\nexport const mahaProcEduFeatures = (features) => {\n  /////  Categories of education  ////  \n  // Post Graduate:4\n  // Graduate Professional:3\n  // Graduate:3\n  // 12th Pass:2\n  // 10th Pass:2\n  // 8th Pass:2\n  // 5th Pass:2\n  // Others: 1\n\n  \n  features.forEach(element => {\n    if (element.properties.Education === 'Post Graduate') {\n      element.properties.edu = 4;\n    } else if (element.properties.Education === 'Graduate Professional' ||\n      element.properties.Education === 'Graduate') {\n      element.properties.edu = 3;\n    } else if (element.properties.Education === '12th Pass' ||\n      element.properties.Education === '10th Pass' ||\n      element.properties.Education === '8th Pass' ||\n      element.properties.Education === '5th Pass') {\n      element.properties.edu = 2;\n    } else if (element.properties.Education === 'Others') {\n      element.properties.edu = 1;\n    } else {\n      element.properties.edu = 0;\n    }\n  });\n}\n\n// Create categories from Party field\nexport const haryanaProcPartyFeatures = (features) => {\n  // Get count of seats for all parties in an object\n  let partyCount = features.reduce((p, c) => {\n    let name = c.properties.Party;\n    if (!p.hasOwnProperty(name)) {\n      p[name] = 0;\n    }\n    p[name]++;\n    return p;\n  }, {});\n\n\n  let sortedPartyCount = [];\n  for (let party in partyCount) {\n    sortedPartyCount.push([party, partyCount[party]]);\n  }\n\n  // Sort the array\n  sortedPartyCount.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  // get top parties by seats\n  sortedPartyCount = sortedPartyCount.slice(0, 4);\n\n  const partyMap = {};\n  for (var i = 0; i < sortedPartyCount.length; ++i)\n    partyMap[sortedPartyCount[i][0]] = sortedPartyCount[i][1];\n\n  return partyMap;\n}\n\n// Create categories from Party field\nexport const mahaProcPartyFeatures = (features) => {\n  // Get count of seats for all parties in an object\n  let partyCount = features.reduce((p, c) => {\n    let name = c.properties.Party;\n    if (!p.hasOwnProperty(name)) {\n      p[name] = 0;\n    }\n    p[name]++;\n    return p;\n  }, {});\n\n\n  let sortedPartyCount = [];\n  for (let party in partyCount) {\n    sortedPartyCount.push([party, partyCount[party]]);\n  }\n\n  // Sort the array\n  sortedPartyCount.sort(function (a, b) {\n    return b[1] - a[1];\n  });\n\n  // get top parties by seats\n  sortedPartyCount = sortedPartyCount.slice(0, 6);\n\n  const partyMap = {};\n  for (var i = 0; i < sortedPartyCount.length; ++i)\n    partyMap[sortedPartyCount[i][0]] = sortedPartyCount[i][1];\n\n  return partyMap;\n}\n\n","import {\n  select,\n  geoPath,\n  geoMercator,\n  format\n  // format\n} from 'd3';\nimport { getSvgDimensions } from './miscUtils';\n\n// console.log(`${getSvgDimensions()}`)\n\nconst generatePath = (longitude, latitude, scale) => {\n  //Set map and projection\n  // const projection = geoMercator().scale(10000)\n  const projection = geoMercator().scale(scale)\n    // .center([77.1, 29.3])\n    .center([longitude, latitude])\n    .translate([getSvgDimensions().width / 2, getSvgDimensions().height / 2]);\n\n  return geoPath().projection(projection);\n\n}\n\nconst constituencyAssetsColor = (d, colorScale, selectedConstituency) => {\n  let constColor;\n\n  if (!d.properties.Assets_num) { constColor = \"black\"; }\n  else if (selectedConstituency === d.properties.ASM_NAME) { constColor = 'yellow'; }\n  else { constColor = colorScale(d.properties.Assets_num); }\n\n  return constColor;\n}\n\nconst constituencyAssetsOpacity = (d, selectedConstituency, selectedColorValue, colorScale) => {\n  // If a color is selected and constituency color is not equal to selected color,\n  // then reduce the opacity\n  let opacity;\n\n  if (selectedColorValue) {\n\n    if (selectedColorValue != colorScale(d.properties.Assets_num)) {\n      opacity = 0.2;\n    }\n    else opacity = 1;\n\n    if (d.properties.Assets_num === null) {\n      opacity = 0.2;\n    }\n\n  } else {\n    opacity = 1;\n  }\n\n  return opacity;\n}\n\nconst constituencyEducationColor = (d, colorScale, selectedConstituency) => {\n  let constColor;\n\n  // console.log({d})\n\n  if (d.properties.Criminal_C === null) {\n    // console.log(d.properties.PC_NAME_x, d.properties.Criminal_C);\n    constColor = \"black\";\n  }\n  else if (selectedConstituency === d.properties.ASM_NAME) { constColor = 'yellow'; }\n  else { constColor = colorScale(d.properties.edu); }\n\n  return constColor;\n}\n\nconst constituencyEducationOpacity = (d, selectedConstituency, selectedColorValue, colorScale) => {\n  // If a color is selected and constituency color is not equal to selected color,\n  // then reduce the opacity\n  let opacity;\n\n  if (selectedColorValue) {\n\n    if (selectedColorValue != colorScale(d.properties.edu)) {\n      opacity = 0.2;\n    }\n    else opacity = 1;\n\n    if (d.properties.edu === 0) {\n      opacity = 0.2;\n    }\n\n  } else {\n    opacity = 1;\n  }\n\n  return opacity;\n}\n\nconst constituencyCriminalColor = (d, colorScale, selectedConstituency) => {\n  let constColor;\n\n  // console.log({d})\n\n  if (d.properties.Criminal_C === null) {\n    // console.log(d.properties.PC_NAME_x, d.properties.Criminal_C);\n    constColor = \"black\";\n  }\n  else if (selectedConstituency === d.properties.ASM_NAME) { constColor = 'yellow'; }\n  else { constColor = colorScale(d.properties.Criminal_C); }\n\n  return constColor;\n}\n\nconst constituencyCriminalOpacity = (d, selectedConstituency, selectedColorValue, colorScale) => {\n  // If a color is selected and constituency color is not equal to selected color,\n  // then reduce the opacity\n  let opacity;\n\n  if (selectedColorValue) {\n\n    if (selectedColorValue != colorScale(d.properties.Criminal_C)) {\n      opacity = 0.2;\n    }\n    else opacity = 1;\n\n    if (d.properties.Criminal_C === null) {\n      opacity = 0.2;\n    }\n\n  } else {\n    opacity = 1;\n  }\n\n  return opacity;\n}\n\n// function returning constituency color\nconst constituencyPartyColor = (d, colorScale, selectedConstituency, partyMap) => {\n  let constColor;\n  // console.log({d})\n\n  if (d.properties.Party === null || d.properties.Party === \"\") {\n    // console.log(d.properties.PC_NAME_x, d.properties.Criminal_C);\n    // console.log({ d });\n    constColor = \"black\";\n  }\n  else if (selectedConstituency === d.properties.ASM_NAME) { constColor = 'yellow'; }\n  else if (partyMap.hasOwnProperty(d.properties.Party)) {\n    console.log(d.properties.Party)\n    constColor = colorScale(d.properties.Party);\n  } else {\n    // console.log({d})\n    constColor = colorScale('Others');\n  }\n\n  return constColor;\n}\n\nconst constituencyPartyOpacity = (d, selectedConstituency, selectedColorValue, colorScale, partyMap) => {\n  let opacity;\n\n  if (selectedColorValue) //color is selected\n  {\n    if (selectedColorValue != colorScale('Others')) // selected color is not other\n    {\n      if (partyMap.hasOwnProperty(d.properties.Party)) //if constituency's party is in list\n      {\n        if (selectedColorValue == colorScale(d.properties.Party)) {\n          opacity = 1;\n        }\n        else {\n          opacity = 0.2;\n        }\n      }\n      else // if constituency's party is not in the list\n      {\n        opacity = 0.2\n      }\n\n    } // select color != \"Other\"\n    else // selected color is \"Other\"\n    {\n      if (partyMap.hasOwnProperty(d.properties.Party)) {\n        opacity = 0.2;\n      }\n      else {\n        opacity = 1;\n      }\n\n      // handle missing values\n      if (d.properties.Party === \"\") { opacity = 0.2; }\n    }\n  } // if color is selected\n  else //no color selected\n  {\n    opacity = 1;\n  }\n\n  return opacity;\n}\n\n// Draw the map from constituencyG passed as 'selection'\nexport const ChoroMap = (selection, props) => {\n  console.log('choroplethMap called');\n  const {\n    longitude,\n    latitude,\n    scale,\n    features,\n    colorScale,\n    selectedColorValue,\n    onConstituencyClick,\n    selectedConstituency,\n    div,\n    partyMap,\n    selectedFeature\n  } = props;\n\n  const constituencyPaths = selection.selectAll(\"path\").data(features, d => d.properties.ASM_NAME);\n  // console.log({partyMap});\n\n  const pathGenerator = generatePath(longitude, latitude, scale)\n\n  const constituencyPathsEnter = constituencyPaths.enter()\n    .append(\"path\")\n    .attr('class', 'constituency')\n    .attr(\"d\", pathGenerator)\n\n  // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n  // @@@@@@@@@@ call appropriate method @@@@@@@@@@@@@@@@@@@@@@@@\n  // @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n\n  if (selectedFeature === 'Top parties') {\n\n    // console.log('if: Party');\n\n    constituencyPathsEnter.merge(constituencyPaths)\n      .attr(\"fill\", d => {\n        return constituencyPartyColor(d, colorScale, selectedConstituency, partyMap)\n      })\n      .attr('opacity', d => constituencyPartyOpacity(d, selectedConstituency, selectedColorValue, colorScale, partyMap))\n      .classed('highlighted', d =>\n        (selectedColorValue && selectedColorValue === colorScale(d.properties.Party))\n      )\n      .on('click', d => onConstituencyClick(\n        d.properties.ASM_NAME === selectedConstituency\n          ? null\n          : d.properties.ASM_NAME\n      )\n      )\n      //Adding mouseevents\n      .on(\"mouseover\", (d) => {\n        div.transition().duration(300)\n          .style(\"opacity\", 0.7)\n        div.html(\n          \"<p><strong>\" + d.properties.ASM_NAME + \"</strong></p>\" +\n          \"<table><tbody><tr><td class='wide'>MLA:</td><td>\" + d.properties.Candidate + \"</td></tr>\" +\n          \"<tr><td>Party:</td><td>\" + d.properties.Party + \"</td></tr>\" +\n          \"</td></tr></tbody></table>\"\n        )\n          .style(\"left\", (event.pageX) + \"px\")\n          .style(\"top\", (event.pageY - 30) + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        div.transition().duration(300)\n          .style(\"opacity\", 0);\n      });\n  } // end if selectedFeature === 'Party'\n  else if (selectedFeature === 'Assets') {\n    // console.log('if: Assets');\n\n    constituencyPathsEnter.merge(constituencyPaths)\n      .attr(\"fill\", d => constituencyAssetsColor(d, colorScale, selectedConstituency))\n      .attr('opacity', d => constituencyAssetsOpacity(d, selectedConstituency, selectedColorValue, colorScale))\n      .classed('highlighted', d =>\n        (selectedColorValue && selectedColorValue === colorScale(d.properties.Assets_num))\n      )\n      .on('click', d => onConstituencyClick(\n        d.properties.ASM_NAME === selectedConstituency\n          ? null\n          : d.properties.ASM_NAME\n      )\n      )\n      //Adding mouseevents\n      .on(\"mouseover\", (d) => {\n        div.transition().duration(300)\n          .style(\"opacity\", 0.7)\n        div.html(\n          \"<p><strong>\" + d.properties.ASM_NAME + \"</strong></p>\" +\n          \"<table><tbody><tr><td class='wide'>MLA:</td><td>\" + d.properties.Candidate + \"</td></tr>\" +\n          \"<tr><td>Assets:</td><td>₹\" + format(\",.2r\")(d.properties.Assets_num) + \"</td></tr>\" +\n          \"<tr><td>Party:</td><td>\" + d.properties.Party + \"</td></tr>\" +\n          \"</td></tr></tbody></table>\"\n        )\n          .style(\"left\", (event.pageX) + \"px\")\n          .style(\"top\", (event.pageY - 30) + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        div.transition().duration(300)\n          .style(\"opacity\", 0);\n      });\n  }\n  else if (selectedFeature === 'Criminal Case(s)') {\n\n    // console.log('if: Criminal case(s)');\n\n    constituencyPathsEnter.merge(constituencyPaths)\n      .attr(\"fill\", d => {\n        return constituencyCriminalColor(d, colorScale, selectedConstituency)\n      })\n      .attr('opacity', d => constituencyCriminalOpacity(d, selectedConstituency, selectedColorValue, colorScale))\n      .classed('highlighted', d =>\n        (selectedColorValue && selectedColorValue === colorScale(d.properties.Criminal_C))\n      )\n      .on('click', d => onConstituencyClick(\n        d.properties.ASM_NAME === selectedConstituency\n          ? null\n          : d.properties.ASM_NAME\n      )\n      )\n      //Adding mouseevents\n      .on(\"mouseover\", (d) => {\n        div.transition().duration(300)\n          .style(\"opacity\", 0.7)\n        div.html(\n          \"<p><strong>\" + d.properties.ASM_NAME + \"</strong></p>\" +\n          \"<table><tbody><tr><td class='wide'>MLA:</td><td>\" + d.properties.Candidate + \"</td></tr>\" +\n          \"<tr><td>Criminal case(s):</td><td>\" + d.properties.Criminal_C + \"</td></tr>\" +\n          \"<tr><td>Party:</td><td>\" + d.properties.Party + \"</td></tr>\" +\n          \"</td></tr></tbody></table>\"\n        )\n          .style(\"left\", (event.pageX) + \"px\")\n          .style(\"top\", (event.pageY - 30) + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        div.transition().duration(300)\n          .style(\"opacity\", 0);\n      });\n\n  } //If criminal case(s)\n  else if (selectedFeature === 'Education') {\n\n    // constituencyPathsEnter.append('title').text(hoverText);\n    constituencyPathsEnter.merge(constituencyPaths)\n      .attr(\"fill\", d => {\n        return constituencyEducationColor(d, colorScale, selectedConstituency)\n      })\n      .attr('opacity', d => constituencyEducationOpacity(d, selectedConstituency, selectedColorValue, colorScale))\n      .classed('highlighted', d =>\n        (selectedColorValue && selectedColorValue === colorScale(d.properties.edu))\n      )\n      .on('click', d => onConstituencyClick(\n        d.properties.ASM_NAME === selectedConstituency\n          ? null\n          : d.properties.ASM_NAME\n      )\n      )\n      //Adding mouseevents\n      .on(\"mouseover\", (d) => {\n        div.transition().duration(300)\n          .style(\"opacity\", 0.7)\n        div.html(\n          \"<p><strong>\" + d.properties.ASM_NAME + \"</strong></p>\" +\n          \"<table><tbody><tr><td class='wide'>MLA:</td><td>\" + d.properties.Candidate + \"</td></tr>\" +\n          \"<tr><td>Education:</td><td>\" + d.properties.Education + \"</td></tr>\" +\n          \"<tr><td>Party:</td><td>\" + d.properties.Party + \"</td></tr>\" +\n          \"</td></tr></tbody></table>\"\n        )\n          .style(\"left\", (event.pageX) + \"px\")\n          .style(\"top\", (event.pageY - 30) + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        div.transition().duration(300)\n          .style(\"opacity\", 0);\n      });\n  } // If Education\n}","import {\n  format\n} from 'd3';\n\n// const numDifferentiation = (val) => {\n//   if(val >= 10000000) val = (val/10000000).toFixed(2) + ' Cr';\n//   else if(val >= 100000) val = (val/100000).toFixed(2) + ' Lac';\n//   else if(val >= 1000) val = (val/1000).toFixed(2) + ' K';\n//   return val;\n// }\n\n// Create data rows for infoPanel\nconst getInfoPanelData = (selectedConstituency, selectedColorValue, features, colorValues, colorLabels, selectedFeature) => {\n  // console.log(`getInfoPanelData called::: ${selectedConstituency}:::${selectedColorValue}`);\n  if (!selectedConstituency && !selectedColorValue) {\n    return ['Click on legend bar or Map'];\n  }\n  else if (selectedConstituency) {\n\n    const arrItem = features.filter(d => d.properties.ASM_NAME === selectedConstituency);\n\n    const constituency = arrItem[0].properties.ASM_NAME;\n\n    const candidate = arrItem[0].properties.Candidate === null ? \"No data\" : arrItem[0].properties.Candidate;\n    const party = arrItem[0].properties.Party === null? \"No data\" : arrItem[0].properties.Party;\n    const education = arrItem[0].properties.Education === null? \"No data\" : arrItem[0].properties.Education;\n    const criminal = arrItem[0].properties.Criminal_C === null? \"No data\" : arrItem[0].properties.Criminal_C;\n    const assets = arrItem[0].properties.Assets_num ? arrItem[0].properties.Assets_num : \"No data\";\n\n    // console.log({constituency, candidate, party, assets});\n\n    return ([\n\n      'Constituency: ' + constituency,\n\n      'MLA: ' + candidate,\n\n      'Assets(Rs.): ' + format(\",.2r\")(assets),\n      // 'Assets(Rs.): ' + assets,\n\n      'Criminal case(s): ' + criminal,\n\n      'Education: ' + education,\n\n      'Party: ' + party\n    ])\n  }\n  else if (selectedColorValue) {\n    const assetsTextIndex = colorValues.indexOf(selectedColorValue);\n\n    if (selectedFeature === 'Assets') {\n      return [`MLA(s) with assets:  ${colorLabels[assetsTextIndex]}`];\n    } else if (selectedFeature === 'Criminal Case(s)') {\n      return [`MLAs with ${colorLabels[assetsTextIndex]} criminal case(s)`];\n    } else if (selectedFeature === 'Education') {\n      return [`MLAs with education:  ${colorLabels[assetsTextIndex]}`];\n    } else if (selectedFeature === 'Top parties') {\n      return [`Constituencies won by: ${colorLabels[assetsTextIndex]}`];\n    } else return ['This should not be displayed'];   \n    \n  }  \n\n}\n\n// Create infoPanel\nexport const mlaInfoPanel = (selection, props) => {\n  // console.log('infoPanel called');\n  const {\n    selectedConstituency,\n    selectedColorValue,\n    features,\n    colorValues,\n    colorLabels,\n    selectedFeature\n  } = props;\n\n  // Get the data to display on panel\n  const textData = getInfoPanelData(selectedConstituency, selectedColorValue, features, colorValues, colorLabels, selectedFeature);\n\n   // remove all existing text\n  selection.selectAll('tspan').remove();\n\n  // Data join: tspan<=>textData\n  const textRows = selection.selectAll('tspan').data(textData);\n\n  textRows\n    .enter()\n    .append('tspan')\n    .attr('x', '0')\n    .attr('dy', '1.5rem')\n    .text((d) => d);  \n\n}","import {\n  select,\n  scaleThreshold,\n  scaleOrdinal,\n  json,\n  zoom,\n  event\n} from 'd3';\n\nimport {\n  getSvgDimensions,\n  getSvg,\n  mahaProcEduFeatures,\n  LoadNProcData,\n  mahaProcPartyFeatures,\n  dropDownMenu,\n  getBgRectangleDimensions,\n  ClrLgnd\n} from './miscUtils';\n\n// import { mahaChoroMap } from './mahaChoroMap';\nimport { ChoroMap } from './ChoroMap';\nimport { mlaInfoPanel } from './mlaInfoPanel';\n\n// Set initial state of the app\nlet selectedFeature = 'Assets';\nlet selectedColorValue; // tracks selected color in legend bar\nlet features; // Globally (in the file) accessible feature array\nlet selectedConstituency; // tracks selected constituency in map\nlet colorDomain;\nlet colorValues;\nlet colorLabels;\nlet colorScale;\n\n// constants for legend bar\nconst labelRectSize = 30;\nconst labelSpacing = 30;\nconst labelTextOffset = 40;\nlet legendTitle;\nlet partyMap;\n\nlet colorLegendG;\nlet legendTitleG;\nlet legendBodyG;\nlet backgroundRect;\nlet legendBodyGSelection;\nlet backgroundRectDimensions;\n\n// Create complete legend bar \nconst createLegendBar = (colorValues,\n  colorLabels,\n  labelRectSize,\n  labelTextOffset,\n  labelSpacing,\n  legendTitle) => {\n\n  // console.log(`createLegendBar called title: ${legendTitle}`);\n  backgroundRectDimensions = getBgRectangleDimensions(colorValues,\n    colorLabels,\n    labelRectSize,\n    labelTextOffset,\n    labelSpacing,\n    legendTitle);\n\n  // Create Legend group and place in lower left of svg. \n  // This will appear over constituencyG group\n  colorLegendG = mainCanvas.selectAll('.colorLegend').data([legendTitle]);\n\n  // remove previuosly added colorLegendG\n  colorLegendG.exit().remove();\n\n  colorLegendG = colorLegendG.enter().append('g')\n    .merge(colorLegendG)\n    .attr('class', 'colorLegend')\n    .attr('transform', `translate(10, ${mainCanvasHeight - backgroundRectDimensions.height})`);\n\n  // Background of legend bar, single item, special case\n  backgroundRect = colorLegendG.selectAll('rect').data([legendTitle]);\n\n  // remove previuosly added rectangle\n  backgroundRect.exit().remove();\n\n  // Background of legend\n  backgroundRect.enter().append('rect')\n    .merge(backgroundRect)\n    .attr('x', -labelRectSize)\n    .attr('y', -labelRectSize)\n    .attr('width', backgroundRectDimensions.width)\n    .attr('height', backgroundRectDimensions.height)\n    .attr('fill', 'red')\n    .attr('rx', labelRectSize)\n    .attr('stroke', 'black')\n    .attr('stroke-width', 1)\n    .attr('opacity', 0.3);\n\n  // Append two groups to legend group, one for title (legendTitleG)\n  // and other for body of legend bar (legendBodyG).\n  legendTitleG = colorLegendG.selectAll('.legendTitle').data([legendTitle]);\n\n  // remove previuosly added legendTitle\n  legendTitleG.exit().remove();\n\n  const legendTitleGMerge = legendTitleG.enter().append('g')\n    .merge(legendTitleG)\n    .attr(\"class\", \"legendTitle\");\n\n  const legendText = legendTitleGMerge.selectAll('text').data([legendTitle]);\n\n  legendText.enter().append('text')\n    .merge(legendText)\n    .text(legendTitle);\n\n  legendBodyG = colorLegendG.selectAll('.legendBody').data([legendTitle]);\n\n  // remove previuosly added legend body\n  legendBodyG.exit().remove();\n\n  legendBodyGSelection = legendBodyG.enter()\n    .append('g')\n    .attr('transform', `translate(0, ${labelSpacing / 2})`)\n    .attr(\"class\", \"legendBody\")\n    .merge(legendBodyG);\n}// End of method createLegendBar\n\n// Create drop down menu\nselect('#menus').call(dropDownMenu, {\n  options: ['Assets', 'Criminal Case(s)', 'Education', 'Top parties'],\n  onOptionClicked: val => {\n    // set the appp state\n    selectedConstituency = null;\n    selectedColorValue = null;\n    selectedFeature = val;\n\n    createScaleAndLegend();\n\n    // call render()\n    render();\n    // console.log(`Selected feature ${val}`);\n  }\n});\n\nconst div = d3.select(\"body\").append(\"div\")\n  .attr(\"class\", \"tooltip\")\n  .style(\"opacity\", 0);\n\n// Set domensions of root svg\nconst mainCanvas = select(\"svg\");\n\nconst mainCanvasHeight = mainCanvas.attr('height');\nconst mainCanvasWidth = mainCanvas.attr('width');\n\n// Constituency group\nconst constituencyG = mainCanvas.append('g');\n\n// Information panel\nconst infoPanelG = mainCanvas.append('g').attr('transform', `translate(${mainCanvasWidth - 370 - 15},20)`);\n\n// Background of info panel, single item, special case\nconst infoPanelGBackground = infoPanelG.selectAll('rect').data([null]);\n\n// Background of info panel\ninfoPanelGBackground.enter().append('rect')\n  .merge(infoPanelGBackground)\n  .attr('width', 370)\n  .attr('height', 170)\n  .attr('fill', 'red')\n  .attr('stroke', 'black')\n  .attr('stroke-width', 1)\n  .attr('rx', 10)\n  .attr('opacity', 0.3);\n\n// Add one time text element to Info Panel\nconst infoPanelGUpdate = infoPanelG.selectAll('text').data([null]);\n\n// Add new text element\nconst infoPanelGMerge = infoPanelGUpdate.enter()\n  .append('text')\n  .attr('class', 'infoText')\n  .attr('transform', 'translate(10,5)')\n  .merge(infoPanelGUpdate);\n\n// Add border to the main canvas\nconst borderPath = mainCanvas.append(\"rect\")\n  .attr(\"x\", 0)\n  .attr(\"y\", 0)\n  .attr(\"height\", getSvgDimensions().height)\n  .attr(\"width\", getSvgDimensions().width)\n  .style(\"stroke\", 'black')\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", 1);\n\n// Add pannning and zooming to map\nmainCanvas.call(zoom().on('zoom', () => {\n  constituencyG.attr('transform', event.transform);\n  div.attr('transform', event.transform);\n\n}));\n\nconst createScaleAndLegend = () => {\n\n  if (selectedFeature === 'Top parties') {\n\n    colorDomain = [\n      \"BJP\",\n      \"SHS\",\n      \"NCP\",\n      \"INC\",\n      \"IND\",\n      \"Bahujan Vikas Aaghadi\",\n      \"Others\"];\n\n    colorValues = ['#edf8e9', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#005a32'];\n\n    colorLabels = colorDomain;\n\n    // Define colorscale for constituencies, discrete input and discrete output\n    colorScale = scaleOrdinal();\n\n    // Set set domain and range of colorscale for constituencies\n    colorScale.domain(colorDomain).range(colorValues);\n\n    legendTitle = 'Top parties';\n\n    createLegendBar(colorValues,\n      colorLabels,\n      labelRectSize,\n      labelTextOffset,\n      labelSpacing,\n      legendTitle);\n\n  }// End, if Top 10 parties\n  else if (selectedFeature === 'Assets') {\n\n    // Define colorscale for constituencies, continous input and discrete output\n    colorScale = scaleThreshold();\n\n    // min~8lacs, max ~ 100crores\n    colorDomain = [10000000,\n      200000000,\n      500000000,\n      1000000000];\n\n    colorValues = ['#edf8e9', '#bae4b3', '#74c476', '#31a354', '#006d2c'];\n\n    colorLabels = [\"< 1 Crore\",\n      \"1 - 20 Cr.\",\n      \"20 - 50 Cr.\",\n      \"50 - 100 Cr.\",\n      \"> 100 Cr.\"];\n\n    // Set set domain and range of colorscale for constituencies\n    colorScale.domain(colorDomain).range(colorValues);\n\n    // Invert the legend bar\n    colorValues.reverse();\n    colorLabels.reverse();\n\n    legendTitle = 'Assets(Rs.)';\n\n    createLegendBar(colorValues,\n      colorLabels,\n      labelRectSize,\n      labelTextOffset,\n      labelSpacing,\n      legendTitle);\n\n  }// End, if Assets\n  else if (selectedFeature === 'Criminal Case(s)') {\n    // console.log(`if called ${selectedFeature}`)\n\n    // min-0, max=2\n    colorDomain = [\n      1,\n      5,\n      10];\n\n    colorValues = ['#edf8e9', '#bae4b3', '#74c476', '#31a354'];\n    // colorValues = ['#f0f9e8','#bae4bc','#7bccc4','#2b8cbe']\n\n    colorLabels = [\n      \"None\",\n      \"1 to 4\",\n      \"5 to 9\",\n      \"10 or more\"];\n\n    // Define colorscale for constituencies\n    colorScale = scaleThreshold();\n\n    // Set set domain and range of colorscale for constituencies\n    colorScale.domain(colorDomain).range(colorValues);\n\n    // Invert the legend bar\n    colorValues.reverse();\n    colorLabels.reverse();\n\n    legendTitle = 'Criminal Case(s)';\n\n    createLegendBar(colorValues,\n      colorLabels,\n      labelRectSize,\n      labelTextOffset,\n      labelSpacing,\n      legendTitle)\n\n  }// End, if Criminal case(s)\n  else if (selectedFeature === 'Education') {\n\n    colorDomain = [\n      1,\n      2,\n      3,\n      4];\n\n    colorValues = ['#edf8e9', '#bae4b3', '#74c476', '#238b45'];\n\n    colorLabels = [\n      \"Others\",\n      \"School\",\n      \"Graduate\",\n      \"Post Graduate\"];\n\n    // Define colorscale for constituencies\n    colorScale = scaleOrdinal();\n\n    // Set set domain and range of colorscale for constituencies\n    colorScale.domain(colorDomain).range(colorValues);\n\n    // Invert the legend bar\n    colorValues.reverse();\n    colorLabels.reverse();\n\n    legendTitle = 'Education';\n\n    createLegendBar(colorValues,\n      colorLabels,\n      labelRectSize,\n      labelTextOffset,\n      labelSpacing,\n      legendTitle)\n  }// End, if Education\n}// End, createScaleAndLegend()\n\n\n// On click, legend bar\nconst onColorClick = d => {\n  // console.log(d);\n  // If constituency is selected, deselect it\n  if (selectedConstituency) {\n    selectedConstituency = null;\n  }\n  selectedColorValue = d;\n  render();\n};\n\n// On click, constituency\nconst onConstituencyClick = d => {\n  // console.log(`const clicked: ${d}`);\n  // // If color is selected, deselect it\n  if (selectedColorValue) {\n    selectedColorValue = null;\n  }\n  selectedConstituency = d;\n  render();\n};\n\n// Load external data and boot\nLoadNProcData('https://raw.githubusercontent.com/saurabhp75/haryana_maha/master/data/merged_maha_2019.json').then((feature_array) => {\n  features = feature_array;\n  mahaProcEduFeatures(features);\n  partyMap = mahaProcPartyFeatures(features);\n  // console.log({partyMap});\n  createScaleAndLegend();\n  render();\n});\n\n\nconst render = () => {\n  console.log('render called')\n\n  const longitude = 76.3;\n  const latitude = 19.8;\n  const scale = 4500;\n\n  // Draw map\n  constituencyG\n    .call(ChoroMap, {\n      longitude,\n      latitude,\n      scale,\n      features,\n      colorScale,\n      selectedColorValue,\n      onConstituencyClick,\n      selectedConstituency,\n      div,\n      partyMap,\n      selectedFeature\n    });\n\n  // Draw legend bar\n  legendBodyGSelection\n    .call(ClrLgnd, {\n      colorValues,\n      colorLabels,\n      labelRectSize,\n      labelSpacing,\n      labelTextOffset,\n      onColorClick,\n      selectedColorValue,\n      selectedConstituency,\n      selectedFeature\n    });\n\n  // Update info panel text\n  infoPanelGMerge\n    .call(mlaInfoPanel, {\n      selectedConstituency,\n      selectedColorValue,\n      features,\n      colorValues,\n      colorLabels,\n      selectedFeature\n    });\n\n} // End of render()\n\n\n"],"names":["getSvgDimensions","svg","select","width","attr","height","ClrLgnd","selection","props","colorValues","colorLabels","labelRectSize","labelSpacing","labelTextOffset","onColorClick","selectedColorValue","selectedConstituency","selectAll","remove","groups","data","exit","groupsEnter","enter","append","merge","d","i","on","text","ChoroMap","console","log","longitude","latitude","scale","features","colorScale","onConstituencyClick","div","partyMap","selectedFeature","constituencyPaths","properties","ASM_NAME","pathGenerator","projection","geoMercator","center","translate","geoPath","generatePath","constituencyPathsEnter","constColor","Party","hasOwnProperty","constituencyPartyColor","opacity","constituencyPartyOpacity","classed","transition","duration","style","html","Candidate","event","pageY","Assets_num","constituencyAssetsColor","constituencyAssetsOpacity","format","Criminal_C","constituencyCriminalColor","constituencyCriminalOpacity","edu","constituencyEducationColor","constituencyEducationOpacity","Education","mlaInfoPanel","textData","arrItem","filter","constituency","candidate","party","education","criminal","assets","assetsTextIndex","indexOf","getInfoPanelData","colorDomain","legendTitle","colorLegendG","legendTitleG","legendBodyG","backgroundRect","legendBodyGSelection","backgroundRectDimensions","createLegendBar","longestLabel","reduce","a","b","length","getBgRectangleDimensions","mainCanvas","mainCanvasHeight","legendText","call","options","onOptionClicked","option","this","value","val","createScaleAndLegend","render","d3","mainCanvasWidth","constituencyG","infoPanelG","infoPanelGBackground","infoPanelGUpdate","infoPanelGMerge","zoom","transform","scaleOrdinal","domain","range","scaleThreshold","reverse","dataurl","json","then","topo","LoadNProcData","feature_array","forEach","element","mahaProcEduFeatures","partyCount","p","c","name","sortedPartyCount","push","sort","slice","mahaProcPartyFeatures"],"mappings":"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"}